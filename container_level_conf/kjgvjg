# curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
# After installation, you'll need to either log out and log back in, or run:

# source ~/.bashrc
# Install Node.js using nvm Now you can install Node.js. For the latest LTS version, run:



# nvm install 14.21.3
# Verify the installation:

# node --version
# npm --version






# /usr/local/bin # ./discover_containers.sh
# [2024-12-29 15:28:08] [INFO] Starting routing tests...
# [2024-12-29 15:28:08] [INFO] Testing /service1/ → Expected IP: 172.17.0.4
# [2024-12-29 15:28:08] [INFO] Response Body: <!DOCTYPE html>
# <html lang="en">
# <head>
# <meta charset="utf-8">
# <title>Error</title>
# </head>
# <body>
# <pre>Cannot GET /service1/</pre>
# </body>
# </html>
# [2024-12-29 15:28:08] [INFO] Real IP:
# [2024-12-29 15:28:08] [ERROR] Routing for /service1/ is incorrect! Got:
# [2024-12-29 15:28:08] [INFO] Testing /service2/ → Expected IP: 172.17.0.2
# [2024-12-29 15:28:08] [INFO] Response Body: <!DOCTYPE html>
# <html lang="en">
# <head>
# <meta charset="utf-8">
# <title>Error</title>
# </head>
# <body>
# <pre>Cannot GET /service2/</pre>
# </body>
# </html>
# [2024-12-29 15:28:08] [INFO] Real IP:
# [2024-12-29 15:28:08] [ERROR] Routing for /service2/ is incorrect! Got:
# [2024-12-29 15:28:08] [INFO] Tests completed.
# /usr/local/bin # docker ps
# CONTAINER ID   IMAGE                                  COMMAND                  CREATED             STATUS                       PORTS                                         NAMES
# 45ec4b48de10   awsemc1980/custom-node-service:v2      "docker-entrypoint.s…"   About an hour ago   Up About an hour (healthy)   0.0.0.0:32769->3000/tcp, :::32769->3000/tcp   ecs-node-task-4ef693bf-1-my-container-nodejs-c692c287f6ebc3bf2800
# 6f9fa4965565   awsemc1980/my_custom_nginx_image1:v7   "/usr/bin/supervisor…"   About an hour ago   Up About an hour (healthy)   0.0.0.0:80->80/tcp, :::80->80/tcp             ecs-nginx-task-4ef693bf-1-my-container-nginx-dabfe49e8c86d1c48b01
# b3cfe1d811b7   awsemc1980/custom-node-service:v2      "docker-entrypoint.s…"   About an hour ago   Up About an hour (healthy)   0.0.0.0:32768->3000/tcp, :::32768->3000/tcp   ecs-node-task-4ef693bf-1-my-container-nodejs-84a3b19ecbfbb7b84300
# 1aa46ea05d2e   amazon/amazon-ecs-agent:latest         "/agent"                 About an hour ago   Up About an hour (healthy)                                                 ecs-agent
# /usr/local/bin # docker inspect my-container-nodejs_437ef31a3487499ab0c5f4dc38ed9fb9 | grep IPAddress
# Error: No such object: my-container-nodejs_437ef31a3487499ab0c5f4dc38ed9fb9
# /usr/local/bin # docker inspect my-container-nodejs_40e36771ee07434ba1f53b73d8accb3a | grep IPAddress
# Error: No such object: my-container-nodejs_40e36771ee07434ba1f53b73d8accb3a
# /usr/local/bin # curl http://172.17.0.4/healthcheck
# curl: (7) Failed to connect to 172.17.0.4 port 80 after 0 ms: Connection refused
# /usr/local/bin # docker inspect ecs-node-task-4ef693bf-1-my-container-nodejs-c692c287f6ebc3bf2800 | grep IPAddress
#             "SecondaryIPAddresses": null,
#             "IPAddress": "172.17.0.4",
#                     "IPAddress": "172.17.0.4",
# /usr/local/bin # docker inspect ecs-node-task-4ef693bf-1-my-container-nodejs-84a3b19ecbfbb7b84300 | grep IPAddress
#             "SecondaryIPAddresses": null,
#             "IPAddress": "172.17.0.2",
#                     "IPAddress": "172.17.0.2",
# /usr/local/bin # vi /etc/nginx/conf.d/default.conf
# /usr/local/bin # ./discover_containers.sh
# [2024-12-29 15:31:43] [INFO] Starting routing tests...
# [2024-12-29 15:31:43] [INFO] Testing /service1/ → Expected IP: 172.17.0.4
# [2024-12-29 15:31:43] [INFO] Response Body: <!DOCTYPE html>
# <html lang="en">
# <head>
# <meta charset="utf-8">
# <title>Error</title>
# </head>
# <body>
# <pre>Cannot GET /service1/</pre>
# </body>
# </html>
# [2024-12-29 15:31:43] [INFO] Real IP:
# [2024-12-29 15:31:43] [ERROR] Routing for /service1/ is incorrect! Got:
# [2024-12-29 15:31:43] [INFO] Testing /service2/ → Expected IP: 172.17.0.2
# [2024-12-29 15:31:44] [INFO] Response Body: <!DOCTYPE html>
# <html lang="en">
# <head>
# <meta charset="utf-8">
# <title>Error</title>
# </head>
# <body>
# <pre>Cannot GET /service2/</pre>
# </body>
# </html>
# [2024-12-29 15:31:44] [INFO] Real IP:
# [2024-12-29 15:31:44] [ERROR] Routing for /service2/ is incorrect! Got:
# [2024-12-29 15:31:44] [INFO] Tests completed.
# /usr/local/bin # nginx -t
# nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
# nginx: configuration file /etc/nginx/nginx.conf test is successful
# /usr/local/bin # nginx -s reload
# 2024/12/29 15:32:14 [notice] 11702#11702: signal process started
# /usr/local/bin # docker exec -it ecs-node-task-4ef693bf-1-my-container-nodejs-c692c287f6ebc3bf2800 bash
# netstat -tuln | grep 3000root@45ec4b48de10:/usr/src/app# netstat -tuln | grep 3000
# bash: netstat: command not found
# root@45ec4b48de10:/usr/src/app# sudo yum install netstat -y
# bash: sudo: command not found
# root@45ec4b48de10:/usr/src/app# yum install netstat -y
# bash: yum: command not found
# root@45ec4b48de10:/usr/src/app# apk-get install netstat -y
# bash: apk-get: command not found
# root@45ec4b48de10:/usr/src/app# apk install netstat -y
# bash: apk: command not found
# root@45ec4b48de10:/usr/src/app# apk update
# apk add net-tools
# bash: apk: command not found
# bash: apk: command not found
# root@45ec4b48de10:/usr/src/app# apk add net-tools
# bash: apk: command not found
# root@45ec4b48de10:/usr/src/app# apk update
# bash: apk: command not found
# root@45ec4b48de10:/usr/src/app# apt-get update
# apt-get install net-tools
# Get:1 http://deb.debian.org/debian bookworm InRelease [151 kB]
# Get:2 http://deb.debian.org/debian bookworm-updates InRelease [55.4 kB]
# Get:3 http://deb.debian.org/debian-security bookworm-security InRelease [48.0 kB]
# Get:4 http://deb.debian.org/debian bookworm/main amd64 Packages [8789 kB]
# Get:5 http://deb.debian.org/debian bookworm-updates/main amd64 Packages [8856 B]
# Get:6 http://deb.debian.org/debian-security bookworm-security/main amd64 Packages [240 kB]
# 93% [4 Packages store 0 B]                                                                                                                                                                            1442 kB/s 0s^Fetched 9292 kB in 12s (805 kB/s)
# Reading package lists... Done
# Reading package lists... Done
# Building dependency tree... Done
# Reading state information... Done
# The following NEW packages will be installed:
#   net-tools
# 0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
# Need to get 243 kB of archives.
# After this operation, 1001 kB of additional disk space will be used.
# Get:1 http://deb.debian.org/debian bookworm/main amd64 net-tools amd64 2.10-0.1 [243 kB]
# Fetched 243 kB in 0s (2290 kB/s)
# debconf: delaying package configuration, since apt-utils is not installed
# Selecting previously unselected package net-tools.
# (Reading database ... 6688 files and directories currently installed.)
# Preparing to unpack .../net-tools_2.10-0.1_amd64.deb ...
# Unpacking net-tools (2.10-0.1) ...
# Setting up net-tools (2.10-0.1) ...
# root@45ec4b48de10:/usr/src/app# docker exec -it ecs-node-task-4ef693bf-1-my-container-nodejs-c692c287f6ebc3bf2800 bash
# netstat -tuln | grep 3000
# bash: docker: command not found
# tcp6       0      0 :::3000                 :::*                    LISTEN
# root@45ec4b48de10:/usr/src/app# ss -tuln | grep 3000
# bash: ss: command not found
# root@45ec4b48de10:/usr/src/app# exit
# exit
# /usr/local/bin # exit
# [ec2-user@ip-10-0-2-143 ~]$ docker ps
# CONTAINER ID   IMAGE                                  COMMAND                  CREATED       STATUS                   PORTS                                         NAMES
# 45ec4b48de10   awsemc1980/custom-node-service:v2      "docker-entrypoint.s…"   2 hours ago   Up 2 hours (healthy)     0.0.0.0:32769->3000/tcp, :::32769->3000/tcp   ecs-node-task-4ef693bf-1-my-container-nodejs-c692c287f6ebc3bf2800
# 6f9fa4965565   awsemc1980/my_custom_nginx_image1:v7   "/usr/bin/supervisor…"   2 hours ago   Up 2 hours (unhealthy)   0.0.0.0:80->80/tcp, :::80->80/tcp             ecs-nginx-task-4ef693bf-1-my-container-nginx-dabfe49e8c86d1c48b01
# b3cfe1d811b7   awsemc1980/custom-node-service:v2      "docker-entrypoint.s…"   2 hours ago   Up 2 hours (healthy)     0.0.0.0:32768->3000/tcp, :::32768->3000/tcp   ecs-node-task-4ef693bf-1-my-container-nodejs-84a3b19ecbfbb7b84300
# 1aa46ea05d2e   amazon/amazon-ecs-agent:latest         "/agent"                 2 hours ago   Up 2 hours (healthy)                                                   ecs-agent
# [ec2-user@ip-10-0-2-143 ~]$ curl http://localhost:32768
# {"message":"Hello from container instance #{container:DockerId}","container":{"id":"#{container:DockerId}","taskId":"#{aws:TaskARN}","serviceIdentity":"my-container-nodejs"},"request":{"path":"/","originalUrl":"/","headers":{"host":"localhost:32768","user-agent":"curl/8.3.0","accept":"*/*"}}}[ec2-user@ip-10-0-2-143 ~]$ curl http://localhost:32769
# {"message":"Hello from container instance #{container:DockerId}","container":{"id":"#{container:DockerId}","taskId":"#{aws:TaskARN}","serviceIdentity":"my-container-nodejs"},"request":{"path":"/","originalUrl":"/","headers":{"host":"localhost:32769","user-agent":"curl/8.3.0","accept":"*/*"}}}[ec2-user@ip-10-0-2-143 ~]$
# [ec2-user@ip-10-0-2-143 ~]$ docker exec -it 6f9fa4965565 /bin/sh
# / # curl http://localhost:32768
# curl: (7) Failed to connect to localhost port 32768 after 0 ms: Connection refused
# / # curl http://localhost:32769
# curl: (7) Failed to connect to localhost port 32769 after 0 ms: Connection refused
# / # curl http://169.254.169.254/latest/meta-data/local-ipv4
# 10.0.2.143/ #
# / # curl http://169.254.169.254/latest/meta-data/local-ipv4
# 10.0.2.143/ #
# / # curl http://10.0.2.143:32768
# {"message":"Hello from container instance #{container:DockerId}","container":{"id":"#{container:DockerId}","taskId":"#{aws:TaskARN}","serviceIdentity":"my-container-nodejs"},"request":{"path":"/","originalUrl":"/","headers":{"host":"10.0.2.143:32768","user-agent":"curl/7.79.1","accept":"*/*"}}}/ # curl http://10.0.2.143:32769
# {"message":"Hello from container instance #{container:DockerId}","container":{"id":"#{container:DockerId}","taskId":"#{aws:TaskARN}","serviceIdentity":"my-container-nodejs"},"request":{"path":"/","originalUrl":"/","headers":{"host":"10.0.2.143:32769","user-agent":"curl/7.79.1","accept":"*/*"}}}/ #